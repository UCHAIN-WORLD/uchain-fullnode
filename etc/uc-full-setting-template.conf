# uc configuration file exmaple

[network]
# The minimum number of threads in the application threadpool, defaults to 50.
threads = 10
# The network protocol version, defaults to 70012.
protocol = 70012
# The magic number for message headers
identifier = 0x6d73766d
# The port for incoming connections, defaults to 5682 (15678 for testnet).
inbound_port = 5682
# The target number of incoming network connections, defaults to 8 when upnp_map_port and be_found are true.
inbound_connections = 128
# The target number of outgoing network connections, defaults to 8.
outbound_connections = 8
# The attempt limit for manual connection establishment, defaults to 0 (forever).
manual_attempt_limit = 0
# The number of concurrent attempts to estalish one connection, defaults to 5.
connect_batch_size = 5
# The time limit for connection establishment, defaults to 5.
connect_timeout_seconds = 5
# The time limit to complete the connection handshake, defaults to 30.
channel_handshake_seconds = 30
# The time between ping messages, defaults to 5.
channel_heartbeat_minutes = 5
# The inactivity time limit for any connection, defaults to 30.
channel_inactivity_minutes = 30
# The maximum age limit for an outbound connection, defaults to 1440.
channel_expiration_minutes = 1440
# The maximum time limit for obtaining seed addresses, defaults to 30.
channel_germination_seconds = 30
# The maximum number of peer hosts in the pool, defaults to 1000.
host_pool_capacity = 1000
# Request that peers relay transactions, defaults to true.
relay_transactions = true
# Re-connect the seed nodes to refresh local hosts cache, when the actual number of outgoing network connection <= 1.
enable_re_seeding = true
# The peer hosts cache file path, defaults to 'hosts.cache'.
hosts_file = hosts.cache
# The debug log file path, defaults to 'debug.log'.
debug_file = debug.log
# The error log file path, defaults to 'error.log'.
error_file = error.log
# The advertised public address of this node, defaults to none.
self = 127.0.0.1:0
# IP address to disallow as a peer, multiple entries allowed.
#blacklist = 127.0.0.1
# Persistent host:port channels, multiple entries allowed.
#peer = obelisk.airbitz.co:5682
# A seed node for initializing the host pool, multiple entries allowed, defaults shown.
#seed = main-uchain-a.live:5682
#seed = main-uchain-b.live:5682
#seed = main-uchain-c.live:5682
#seed = main-uchain-d.live:5682
#seed = main-uchain-e.live:5682
#seed = main-uchain-f.live:5682
# Testnet seed nodes.
#seed = test-uchain-a.live:15678
#seed = test-uchain-a.live:15678
#seed = test-uchain-a.live:15678
#seed = test-uchain-a.live:15678
#seed = test-uchain-a.live:15678
#seed = test-uchain-a.live:15678
# Add a upnp map port in your router which has a extern address to allow connections to your local address.
upnp_map_port = true
# If broadcast your upnp extern address on the network to allow others find you and connect you.
be_found = true

[database]
# The lower limit of spend indexing, defaults to 0.
history_start_height = 0
# The lower limit of stealth indexing, defaults to 350000.
stealth_start_height = 350000
# The blockchain database directory, defaults to 'mainnet-blockchain'.
directory = mainnet

[blockchain]
# The maximum number of orphan blocks in the pool, defaults to 50.
block_pool_capacity = 5000
# The maximum number of transactions in the pool, defaults to 2000.
tx_pool_capacity = 2000
# Enforce consistency between the pool and the blockchain, defaults to false.
tx_pool_consistency = false
# Use testnet rules for determination of work required, defaults to false.
use_testnet_rules = false
# A hash:height checkpoint, multiple entries allowed, defaults shown.
#checkpoint = b0a3db8153352dc4384c605f17240dde1c63e55c582b2cdd0000d6f2eaedcaea:0
#checkpoint = b0a3db8153352dc4384c605f17240dde1c63e55c582b2cdd0000d6f2eaedcaea:1000
#checkpoint = b0a3db8153352dc4384c605f17240dde1c63e55c582b2cdd0000d6f2eaedcaea:10000
#checkpoint = b0a3db8153352dc4384c605f17240dde1c63e55c582b2cdd0000d6f2eaedcaea:100000

[node]
# The time limit for block receipt during initial block download, defaults to 5.
block_timeout_seconds = 5
# The maximum number of connections for initial block download, defaults to 8.
download_connections = 8
# Refresh the transaction pool on reorganization and channel start, defaults to true.
tx_pool_refresh = true

[server]
# The maximum number of query worker threads per endpoint, defaults to 1.
query_workers = 1
# The heartbeat interval, defaults to 5.
heartbeat_interval_seconds = 5
# The subscription expiration time, defaults to 10.
subscription_expiration_minutes = 10
# The maximum number of subscriptions, defaults to 100000000.
subscription_limit = 100000000
# mongoose listen port
# for private
#mongoose_listen = 127.0.0.1:8707
# for public
#mongoose_listen = 0.0.0.0:8707
# Write service requests to the log, defaults to false.
log_requests = false
# Disable public endpoints, defaults to false.
secure_only = false
# Enable the query service, defaults to true.
query_service_enabled = true
# Enable the heartbeat service, defaults to false.
heartbeat_service_enabled = false
# Enable the block publishing service, defaults to false.
block_service_enabled = false
# Enable the transaction publishing service, defaults to false.
tx_service_enabled = false
# The public query endpoint, defaults to 'tcp://*:18707'.
public_query_endpoint = tcp://*:18707
# The public heartbeat endpoint, defaults to 'tcp://*:9092'.
public_heartbeat_endpoint = tcp://*:9002
# The public block publishing endpoint, defaults to 'tcp://*:9093'.
public_block_endpoint = tcp://*:9003
# The public transaction publishing endpoint, defaults to 'tcp://*:9094'.
public_transaction_endpoint = tcp://*:9004
# The secure query endpoint, defaults to 'tcp://*:9081'.
secure_query_endpoint = tcp://*:9081
# The secure heartbeat endpoint, defaults to 'tcp://*:9082'.
secure_heartbeat_endpoint = tcp://*:9082
# The secure block publishing endpoint, defaults to 'tcp://*:9083'.
secure_block_endpoint = tcp://*:9083
# The secure transaction publishing endpoint, defaults to 'tcp://*:9084'.
secure_transaction_endpoint = tcp://*:9084
# The Z85-encoded private key of the server, enables secure endpoints.
#server_private_key =
# Allowed Z85-encoded public key of the client, multiple entries allowed.
#client_public_key =
# Allowed client IP address, multiple entries allowed.
#client_address = 127.0.0.1
